syntax = "proto3";

option csharp_namespace = "MicroZen.Grpc.Entities";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

package MicroZen.Grpc.Entities;

// The service for managing Clients.
service Clients {
  // Get a client by its ID.
  rpc GetClient (ClientRequest) returns (ClientMessage) {
    option (google.api.http) = {
      get: "/api/v1/clients/{id}"
    };
  };
  // Get a clientId by its MicroZen Client API Key
  rpc GetClientIdFromApiKey (google.protobuf.StringValue) returns (google.protobuf.Int32Value) {
    option (google.api.http) = {
      get: "/api/v1/clients/api-key/{value}"
    };
  };
  // Get all the OAuth Client credentials for clients that are allowed to use the OAuth2 server.
  rpc GetAllowedOAuthClientCredentials (ClientRequest) returns (MultipleClientCredentials) {
    option (google.api.http) = {
      get: "/api/v1/client/{id}/allowed-clients"
    };
  };
  // Create a new OAuth2 client.
  rpc CreateClient (ClientMessage) returns (ClientMessage) {
    option (google.api.http) = {
      post: "/api/v1/clients"
      body: "*"
    };
  };
  // Update an existing OAuth2 client.
  rpc UpdateClient (ClientMessage) returns (ClientMessage) {
    option (google.api.http) = {
      put: "/api/v1/clients/{id}"
      body: "*"
    };
  };
  // Adds a client to the list of allowed clients.
  rpc AllowClient(ClientAllowRequest) returns (ClientAllowResponse) {
    option (google.api.http) = {
      post: "/api/v1/clients/{id}/allow"
    };
  };
  // Removes a client from the list of allowed clients.
  rpc DisallowClient(ClientAllowRequest) returns (ClientAllowResponse) {
    option (google.api.http) = {
      post: "/api/v1/clients/{id}/disallow"
    };
  };
  // Delete an OAuth2 client.
  rpc DeleteClient (DeleteClientRequest) returns (DeleteClientResponse) {
    option (google.api.http) = {
      delete: "/api/v1/clients/{id}"
    };
  };
}

// The type of the client.
enum ClientType {
  // The client type is a server based api.
  SERVER = 0;
  // The client is a web app.
  WEB = 1;
  // The client is a desktop app.
  DESKTOP = 2;
  // The client is a mobile app.
  MOBILE = 3;
}

// The OAuth2 Grant Types.
enum GrantType {
  // Authorization Code Grant
  AuthorizationCode = 0;
  // Authorization Code Grant with PKCE
  AuthorizationCodeWithPkce = 1;
  // Client Credentials Grant
  ClientCredentials = 2;
  // Device Authorization Grant
  DeviceAuthorization = 3;
  // Implicit Grant
  Implicit = 4;
  // Hybrid Grant
  Hybrid = 5;
  // Resource Owner Password Grant
  ResourceOwnerPassword = 6;
}

// The Client request message containing the client ID.
message ClientRequest {
  // The ID of the client.
  int32 id = 1;
}

// The ClientAllow request message containing the client ID and the allowed client ID and whether it is allowed.
message ClientAllowRequest {
  // The ID of the client.
  int32 id = 1;
  // The ID of the allowed client.
  int32 allowed_client_id = 2;
}

// The ClientAllow request message containing the client ID and the allowed client ID and whether it is allowed.
message ClientAllowResponse {
  // The ID of the client.
  int32 id = 1;
  // The ID of the allowed client.
  int32 allowed_client_id = 2;
}


// The response message containing the client credentials for allowed clients.
message MultipleClientCredentials {
  // The OAuth2 credentials for the clients.
  repeated OAuth2Credentials credentials = 1;
}

// The DeleteClient request message.
message DeleteClientRequest {
  // The ID of the client.
  int32 id = 1;
}

// The DeleteClient response message.
message DeleteClientResponse {
  // The ID of the client that was deleted.
  int32 id = 1;
  google.protobuf.Timestamp deletedOn = 2;
}

// The OAuth2 client credentials for a client.
message OAuth2Credentials {
  // The ID of the client.
  int32 id = 1;
  // The OAuth ClientId.
  string client_id = 2;
  // The client secret.
  string client_secret = 3;
  // The client UserPoolId
  string user_pool_id = 4;
  // The client region
  string region = 5;
  // The client type.
  ClientType type = 6;
}

// The request message containing the user's name.
message ClientMessage {
  // The ID of the client.
  int32 id = 1;
  // The name of the client.
  string name = 2;
  // The type of the client.
  ClientType type = 3;
  // The description of the client.
  string description = 4;
  // The organization ID that the client belongs to.
  int32 organization_id = 5;
  // The client OAuth credentials.
  OAuthClientCredentials oauth2_credentials = 6;
}

message OAuthClientCredentials {
  // The ID of the client.
  google.protobuf.Int32Value id = 1;
  // The OAuth ClientId.
  GrantType grant_type = 2;
  // The client id.
  string client_id = 3;
  // The client secret.
  google.protobuf.StringValue client_secret = 4;
  // The client scopes
  google.protobuf.StringValue allowed_scopes = 5;
  // Whether to require PKCE for the OAuth2 Client.
  google.protobuf.BoolValue require_pkce = 6;
}
